package net.neurolab.musicmap;

import java.util.ArrayList;

import net.neurolab.musicmap.db.Event;
import net.neurolab.musicmap.db.Location;
import net.neurolab.musicmap.dl.DataLoader.OnDataLoadedListener;
import net.neurolab.musicmap.ws.JSONAdapter;
import net.neurolab.musicmap.ws.MMAsyncTask;
import android.os.Bundle;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.LayoutInflater;

import com.actionbarsherlock.app.ActionBar;
import com.actionbarsherlock.app.ActionBar.Tab;
import com.actionbarsherlock.app.SherlockFragmentActivity;


public class MainActivity extends SherlockFragmentActivity implements OnDataLoadedListener {

	ActionBar mActionBar;
	ViewPager mPager;
	Tab tab;
	
	@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
       
        setContentView(R.layout.activity_main);
 
        mActionBar = getSupportActionBar();
        mActionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);

        mPager = (ViewPager) findViewById(R.id.pager);
        FragmentManager fm = getSupportFragmentManager();
 
        ViewPager.SimpleOnPageChangeListener ViewPagerListener = new ViewPager.SimpleOnPageChangeListener() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);
                
                mActionBar.setSelectedNavigationItem(position);
            }
        };
 
        mPager.setOnPageChangeListener(ViewPagerListener);
        ViewPagerAdapter viewPagerAdapter = new ViewPagerAdapter(fm);
        mPager.setAdapter(viewPagerAdapter);
        
        ActionBar.TabListener tabListener = new ActionBar.TabListener() {
        	
            
        	@Override
            public void onTabSelected(Tab tab, FragmentTransaction ft) {
        	    mPager.setCurrentItem(tab.getPosition());
            }
 
            @Override
            public void onTabUnselected(Tab tab, FragmentTransaction ft) {
            	
            	
            }
 
            @Override
            public void onTabReselected(Tab tab, FragmentTransaction ft) {
            	mPager.setCurrentItem(tab.getPosition());
            }
        };
 
        tab = mActionBar.newTab().setText("Map").setTabListener(tabListener);
        mActionBar.addTab(tab);
 
        tab = mActionBar.newTab().setText("List").setTabListener(tabListener);
        mActionBar.addTab(tab);
 
        
        
        
    }
	
	public void proba(){
		
		MMAsyncTask asyncTaskStores = new MMAsyncTask();
		Object params[] = new Object[] { "getEvents", "add", null,
				handleResult, null, null };
		asyncTaskStores.execute(params);	
	
	}
	
	public void handleResult(String result, Boolean status) {
		System.out.println(status.toString());

		ArrayList<Event> events = new ArrayList<Event>();
		ArrayList<Location> locations = new ArrayList<Location>();

		try {
			JSONAdapter.getEvents(result, events, locations);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		for (int i = 0; i < events.size(); i++) {
			System.out.println(events.get(i).toString());
		}	
	}
	
	@Override
	public void OnDataLoaded(ArrayList<Event> events) {
		// data updated: (either from database, search or web service)
		// raise the event for GoogleMapsFragment ;) so it updates the ExpandableListView   !!!!!!!!!!!!!!
		// this is because DataLoader accepts Activity as an argument, and not Fragment
		// therefore MainActivity acts as a data collector for Fragments
		//if(dlf != null) dlf.OnDataChanged(stores, discounts);
		//if(dialog != null)
			//dialog.cancel();
	}
	
	//*****************************************************************************************
	/*
	public interface OnDataChangedListener{//suèelje -> implementirano u nekom fragmentu (npr poèetnom koji prikazuje kartu)
		void OnDataChanged(ArrayList<Event> events);
	}*/
}

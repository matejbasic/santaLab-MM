package net.neurolab.musicmap.dl;

import net.neurolab.musicmap.db.Event;
import net.neurolab.musicmap.ws.JSONAdapter;
import net.neurolab.musicmap.ws.MMAsyncResultHandler;
import net.neurolab.musicmap.ws.MMAsyncTask;
import android.app.Activity;

public class DataLoaderMM extends DataLoader{

	private boolean eventsLoaded = false;
	//private boolean locationsLoaded = false;
	//...
	
	@Override
	public void LoadData(Activity activity) {
		super.LoadData(activity);
		
		MMAsyncTask asyncTaskEvents = new MMAsyncTask();
		Object paramsEvent[] = new Object[]{"getEvents", null, null, eventsHandler, null, null};
		asyncTaskEvents.execute(paramsEvent);		
		
	}
	
	@Override
	MMAsyncResultHandler eventsHandler = new MMAsyncResultHandler() {

	}
	
	MMAsyncResultHandler getLocations = new MMAsyncResultHandler() {
		
	};
	
	private void showLoadedData()
	{
		//Synchronization of results
		if (storesLoaded && discountsLoaded)
		{
			bindDiscountsToStores();
			
			storesLoaded = false;
			discountsLoaded = false;
			
			DataLoaded();
		}
	}
		
	private void bindDiscountsToStores() {//dodaje objekt store pripadajuæem objektu discount
		for (Store s : stores) {
			for (Discount d : discounts) {
				if(d.getRemoteId() == s.getRemoteId()){
					d.setStore(s);
					d.save();
				}
			}
		}
	}
}

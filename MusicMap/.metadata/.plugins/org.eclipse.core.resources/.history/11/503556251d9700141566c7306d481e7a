package net.neurolab.musicmap.nd;


import java.util.ArrayList;

import android.app.Activity;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.support.v4.app.ActionBarDrawerToggle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.widget.DrawerLayout;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.ListView;

// possibly you can get a deprecation message for mDrawerToggle,
// it has been very recently deprecated for Android 5.0
// use the v7 one instead
//@SuppressWarnings("deprecation")
public class NavigationManager {
	
	public ArrayList<NavigationItem> navigationItems;
	
	private Activity mHandlerActivity;
	private ListView mDrawerList;
	private DrawerLayout mDrawerLayout;
	// recently deprecated, use one from v7
    private ActionBarDrawerToggle mDrawerToggle;
    private static NavigationManager instance;
    
    @SuppressWarnings("rawtypes")
	private ArrayAdapter mNavigationAdapter;
	
	private NavigationManager(){
		navigationItems = new ArrayList<NavigationItem>();
	};
	
	public static NavigationManager getInstance(){
		if(instance == null) 
			instance = new NavigationManager();
		return instance;
	}
	
	public void setDependencies(Activity handlerActivity, DrawerLayout drawerLayout, ListView drawerList){
		this.mHandlerActivity = handlerActivity;
		this.mDrawerList = drawerList;
		this.mDrawerLayout = drawerLayout;
	}
	
	public void addItem(NavigationItem newItem){
		newItem.setPosition(getNavigationOptions().size() + 1);
		navigationItems.add(newItem);
	    mNavigationAdapter = new ArrayAdapter<String>(mHandlerActivity,  R.layout.drawer_list_item, getNavigationOptions());
	    mDrawerList.setAdapter(mNavigationAdapter);
	    mNavigationAdapter.notifyDataSetChanged();
		
	}
	
	public ArrayList<String> getNavigationOptions(){
		ArrayList<String> navigationOptions = new ArrayList<String>();
		for (NavigationItem item : navigationItems) {
			navigationOptions.add(item.getItemName());
		}
		return navigationOptions;
	}
	
	public void setup(){
		mNavigationAdapter = new ArrayAdapter<String>(mHandlerActivity,  R.layout.drawer_list_item, getNavigationOptions());
	    mDrawerList.setAdapter(mNavigationAdapter);
	    
	    mDrawerList.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> parent, View view,int position, long id) {
				// switch to fragment by its position
				// every navigation item has a "position" number defined by interface 
				selectItem(position);
			}
		});
	    	   
	    // ActionBarDrawerToggle enables you to use ActionBar for navigation drawer
	    mDrawerToggle = new ActionBarDrawerToggle(
                mHandlerActivity,      /* host Activity */
                mDrawerLayout,         /* DrawerLayout object */
                R.drawable.ic_launcher,  /* nav drawer icon to replace 'Up' caret */
                R.string.open_navigation,  /* "open drawer" description */
                R.string.close_navigation  /* "close drawer" description */
                ) {

            /** Called when a drawer has settled in a completely closed state. */
            public void onDrawerClosed(View view) {
                super.onDrawerClosed(view);
            }

            /** Called when a drawer has settled in a completely open state. */
            public void onDrawerOpened(View drawerView) {
                super.onDrawerOpened(drawerView);
            }
        };
        
        // Set the drawer toggle as the DrawerListener
        mDrawerLayout.setDrawerListener(mDrawerToggle);
    
	}
	
	
	/** Swaps fragments in the main content view */
	private void selectItem(int position) {
	    // fragment switch here...
	    switchFragment(position);

	    // Highlight the selected item, update the title, and close the drawer
	    mDrawerList.setItemChecked(position, true);
	    mHandlerActivity.setTitle(getNavigationOptions().get(position));
	    mDrawerLayout.closeDrawer(mDrawerList);
	}
	
	// make the change of fragments
	private void switchFragment(int position) {
		SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(mHandlerActivity);
		boolean animate_enabled = preferences.getBoolean("pref_animate", true);		
	
		Fragment fragment = navigationItems.get(position).getFragment();
		// create a new transaction, i.e. an object which will switch between fragments 
		FragmentTransaction transaction = ((FragmentActivity) mHandlerActivity).getSupportFragmentManager().beginTransaction();
		if(animate_enabled){
			transaction.setCustomAnimations(R.anim.enter_right, R.anim.exit_left);
		}
		transaction.replace(R.id.fragment_container, fragment);
		// clear backstack - we don't want back button anymore
		((FragmentActivity) mHandlerActivity).getSupportFragmentManager().popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE);
		transaction.commit();		
	}

	// return mDrawerToggle 
	public ActionBarDrawerToggle getDrawer(){
		return mDrawerToggle;
	}
	
	// check if no navigation items are available
	public boolean isEmpty(){
		if(getNavigationOptions().size() == 0) return true;
		else return false;
	}
}

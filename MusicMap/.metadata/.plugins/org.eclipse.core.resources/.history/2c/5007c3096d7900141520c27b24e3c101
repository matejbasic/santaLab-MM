package net.neurolab.musicmap.dl;

import net.neurolab.musicmap.ws.MMAsyncResultHandler;
import net.neurolab.musicmap.ws.MMAsyncTask;
import android.app.Activity;

public class DataLoaderMM extends DataLoader{

	private boolean eventsLoaded = false;
	//private boolean locationsLoaded = false;
	//...
	
	@Override
	public void LoadData(Activity activity) {
		super.LoadData(activity);
		
		MMAsyncTask asyncTaskEvents = new MMAsyncTask();
		Object paramsEvent[] = new Object[]{"getEvents", null, null, eventsHandler, null, null};
		asyncTaskEvents.execute(paramsEvent);		
		
	}
	
	MMAsyncResultHandler acceptStores = new MMAsyncResultHandler() {
		
		@Override
		public void handleResults(String result, boolean ok) {
			//convert to List<Stores>
			if (ok)
			{
				try {
					stores = JsonAdapter.getStores(result);
					for (Store s : stores) {
						s.save();
					}
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			storesLoaded = true;
			//showLoadedData();
			DataLoaded();//iz DataLoadera - ako su podaci uèitani vraæa true... goto DataLoader.java :)
		}

		@Override
		public void handleResult(String result, Boolean status) {
			// TODO Auto-generated method stub
			
		}
	};
	
	WebServiceResultHandler acceptDiscounts = new WebServiceResultHandler() {
		
		@Override
		public void handleResult(String result, boolean ok) {
			//converto to List<Discounts>
			if (ok)
			{
				try {
					discounts = JsonAdapter.getDiscounts(result);
					// save to local database
					for (Discount d : discounts) {
						d.save();
					}
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			discountsLoaded = true;
			showLoadedData();
			
		}
	};
	
	private void showLoadedData()
	{
		//Synchronization of results
		if (storesLoaded && discountsLoaded)
		{
			bindDiscountsToStores();
			
			storesLoaded = false;
			discountsLoaded = false;
			
			DataLoaded();
		}
	}
		
	private void bindDiscountsToStores() {//dodaje objekt store pripadajuæem objektu discount
		for (Store s : stores) {
			for (Discount d : discounts) {
				if(d.getRemoteId() == s.getRemoteId()){
					d.setStore(s);
					d.save();
				}
			}
		}
	}
}
